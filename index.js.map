{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/obliterator/foreach.js","webpack:///./node_modules/mnemonist/utils/comparators.js","webpack:///./node_modules/mnemonist/multi-set.js","webpack:///./node_modules/obliterator/iterator.js","webpack:///./node_modules/mnemonist/fixed-reverse-heap.js","webpack:///./node_modules/mnemonist/heap.js","webpack:///./node_modules/mnemonist/utils/iterables.js","webpack:///./node_modules/mnemonist/utils/typed-arrays.js","webpack:///./src/animation.ts","webpack:///./src/movement.ts","webpack:///./src/ring.ts","webpack:///./src/cursor.ts","webpack:///./src/solver.ts","webpack:///./src/controls.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ARRAY_BUFFER_SUPPORT","ArrayBuffer","SYMBOL_SUPPORT","forEach","iterable","callback","iterator","k","Error","Array","isArray","isView","toString","length","next","done","forEachWithNullKeys","Set","DEFAULT_COMPARATOR","a","b","DEFAULT_REVERSE_COMPARATOR","reverseComparator","comparator","createTupleComparator","size","Iterator","FixedReverseHeap","MULTISET_ITEM_COMPARATOR","MultiSet","this","items","Map","clear","dimension","add","item","count","remove","currentCount","undefined","set","delete","has","multiplicity","newCount","Math","max","edit","am","bm","frequency","top","step","heap","entries","push","consume","scope","arguments","forEachMultiplicity","keys","values","inContainer","multiplicities","inspect","for","toJSON","from","isSubset","A","B","mA","isSuperset","writable","_next","of","args","empty","is","comparators","Heap","siftUp","compare","rightIndex","endIndex","startIndex","childIndex","siftDown","ArrayClass","lastItem","array","capacity","replace","peek","toArray","slice","proxy","iterables","parentIndex","parent","pop","popped","pushpop","tmp","heapify","MaxHeap","isArrayLike","nsmallest","v","result","reverseCompare","min","Infinity","constructor","sort","guessLength","nlargest","MinHeap","isTypedArray","target","MAX_8BIT_INTEGER","pow","MAX_16BIT_INTEGER","MAX_32BIT_INTEGER","MAX_SIGNED_8BIT_INTEGER","MAX_SIGNED_16BIT_INTEGER","MAX_SIGNED_32BIT_INTEGER","getPointerArray","maxIndex","Uint8Array","Uint16Array","Uint32Array","Float64Array","getSignedPointerArray","Int8Array","Int16Array","Int32Array","getNumberType","sign","TYPE_PRIORITY","Float32Array","getMinimalRepresentation","maxType","maxPriority","concat","indices","Animation","duration_sec","onframe","onfinish","RangeError","onframe_","onfinish_","start_","getInstance","isScheduled","performance","now","schedule","unschedule","amount","playOnNextFrame","animationFrameId_","playing_","instance_","startAnimating_","drawFrame","err","window","requestAnimationFrame","animationFrame_","cancelAnimationFrame","simplifyMovement","type","clockwise","NUM_ANGLES","outward","NUM_RINGS","reverseMovement","MoveHistory","ringMovesDisplay","ringMovesDisplay_","moves_","updateDisplay","innerText","NUM_CELLS","CELL_ANGLE","PI","FRAME","AnimationMode","filledArc","ctx","x","y","r1","r2","startAngle","endAngle","anticlockwise","arc","closePath","innerStroke","save","clip","fill","stroke","restore","Cell","fill_","hasEnemy","pos","strokeStyle","fillStyle","lineWidth","basePath","th","dotCenter","cos","sin","cellCenter","moveTo","beginPath","globalCompositeOperation","rStart","thStart","RingView","layers","model","layers_","model_","drawRing","drawOverlay","group","anim_amount","drawSubring","drawAngle","getCell","base","getLayer","enemies","cell","thShifted","drawBase","drawTop","rShifted","thWrapped","rWrapped","R0","OUTSIDE_R0","layer_name","layer","ReferenceError","RingModel","ringContents_","color","floor","rotateRing","shiftRow","console","log","start","end","arr","j","round","canvases","currentMovement_","readyCallbacks_","canvases_","view_","canvasSize","ring","width","height","layerName","canvas","getContext","translate","scale","canvasesToLayers","animation_","onFrame","onSingleMoveDone","view","drawGroup","move","play","cb","shift","isPlaying","isBusy","Promise","resolve","animate","NORMAL","waitUntilReady","NONE","UNDO","animationSpeed","offsetPos","style","getComputedStyle","parseInt","offsetToFramePos","atan2","sqrt","event","offsetToRingPos","offsetX","offsetY","clearTop","CursorState","moveHistory","controls","type_","state_","UNFOCUSED","animatingMovement_","ring_","drawAnimationFrame","draw","moveHistory_","controls_","HIDDEN","FOCUSED","reverse","clearRect","hidden","focused","drawRing_","drawRow_","boardR","drawTh","boardTh","confirm","updateControls","switchFocus","cancel","moveRing","positive","arrowIsPositive","switchType","addMovement","cancelPlanned","undo","movement","animateMove","then","popMovement","states","setStates","m1","m2","abs","combineMovements","getRingData","ringData","subring","worker_","w","Worker","onmessage","onerror","onmessageerror","error","worker","getWorker","channel","MessageChannel","postMessage","ondone","port2","reject","port1","e","data","solution","moves","map","Controls","controlsDisplay","controlsDisplay_","setAttribute","join","getNotNullById","id","element","document","getElementById","addEventListener","overlay","enemy","cursor","solver","solveButton","classList","contains","onMouseDown","onKeyDown","preventDefault","async","solve","hide","setTimeout","show","undoButton","appHeight","documentElement","setProperty","innerHeight"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\n\n/**\n * Constants.\n */\nvar ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined',\n    SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nfunction forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEach: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEach: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], i);\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n}\n\n/**\n * Same function as the above `forEach` but will yield `null` when the target\n * does not have keys.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nforEach.forEachWithNullKeys = function(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEachWithNullKeys: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEachWithNullKeys: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], null);\n    return;\n  }\n\n  // The target is a Set\n  if (iterable instanceof Set) {\n    iterable.forEach(function(value) {\n      callback(value, null);\n    });\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, null);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = forEach;\n","/**\n * Mnemonist Heap Comparators\n * ===========================\n *\n * Default comparators & functions dealing with comparators reversing etc.\n */\nvar DEFAULT_COMPARATOR = function(a, b) {\n  if (a < b)\n    return -1;\n  if (a > b)\n    return 1;\n\n  return 0;\n};\n\nvar DEFAULT_REVERSE_COMPARATOR = function(a, b) {\n  if (a < b)\n    return 1;\n  if (a > b)\n    return -1;\n\n  return 0;\n};\n\n/**\n * Function used to reverse a comparator.\n */\nfunction reverseComparator(comparator) {\n  return function(a, b) {\n    return comparator(b, a);\n  };\n}\n\n/**\n * Function returning a tuple comparator.\n */\nfunction createTupleComparator(size) {\n  if (size === 2) {\n    return function(a, b) {\n      if (a[0] < b[0])\n        return -1;\n\n      if (a[0] > b[0])\n        return 1;\n\n      if (a[1] < b[1])\n        return -1;\n\n      if (a[1] > b[1])\n        return 1;\n\n      return 0;\n    };\n  }\n\n  return function(a, b) {\n    var i = 0;\n\n    while (i < size) {\n      if (a[i] < b[i])\n        return -1;\n\n      if (a[i] > b[i])\n        return 1;\n\n      i++;\n    }\n\n    return 0;\n  };\n}\n\n/**\n * Exporting.\n */\nexports.DEFAULT_COMPARATOR = DEFAULT_COMPARATOR;\nexports.DEFAULT_REVERSE_COMPARATOR = DEFAULT_REVERSE_COMPARATOR;\nexports.reverseComparator = reverseComparator;\nexports.createTupleComparator = createTupleComparator;\n","/**\n * Mnemonist MultiSet\n * ====================\n *\n * JavaScript implementation of a MultiSet.\n */\nvar Iterator = require('obliterator/iterator'),\n    forEach = require('obliterator/foreach'),\n    FixedReverseHeap = require('./fixed-reverse-heap.js');\n\n/**\n * Helpers.\n */\nvar MULTISET_ITEM_COMPARATOR = function(a, b) {\n  if (a[1] > b[1])\n    return -1;\n  if (a[1] < b[1])\n    return 1;\n\n  return 0;\n};\n\n// TODO: helper functions: union, intersection, sum, difference, subtract\n\n/**\n * MultiSet.\n *\n * @constructor\n */\nfunction MultiSet() {\n  this.items = new Map();\n\n  Object.defineProperty(this.items, 'constructor', {\n    value: MultiSet,\n    enumerable: false\n  });\n\n  this.clear();\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nMultiSet.prototype.clear = function() {\n\n  // Properties\n  this.size = 0;\n  this.dimension = 0;\n  this.items.clear();\n};\n\n/**\n * Method used to add an item to the set.\n *\n * @param  {any}    item  - Item to add.\n * @param  {number} count - Optional count.\n * @return {MultiSet}\n */\nMultiSet.prototype.add = function(item, count) {\n  if (count === 0)\n    return this;\n\n  if (count < 0)\n    return this.remove(item, -count);\n\n  count = count || 1;\n\n  if (typeof count !== 'number')\n    throw new Error('mnemonist/multi-set.add: given count should be a number.');\n\n  this.size += count;\n\n  const currentCount = this.items.get(item);\n\n  if (currentCount === undefined)\n    this.dimension++;\n  else\n    count += currentCount;\n\n  this.items.set(item, count);\n\n  return this;\n};\n\n/**\n * Method used to set the multiplicity of an item in the set.\n *\n * @param  {any}    item  - Target item.\n * @param  {number} count - Desired multiplicity.\n * @return {MultiSet}\n */\nMultiSet.prototype.set = function(item, count) {\n  var currentCount;\n\n  if (typeof count !== 'number')\n    throw new Error('mnemonist/multi-set.set: given count should be a number.');\n\n  // Setting an item to 0 or to a negative number means deleting it from the set\n  if (count <= 0) {\n    currentCount = this.items.get(item);\n\n    if (typeof currentCount !== 'undefined') {\n      this.size -= currentCount;\n      this.dimension--;\n    }\n\n    this.items.delete(item);\n    return this;\n  }\n\n  count = count || 1;\n\n  currentCount = this.items.get(item);\n\n  if (typeof currentCount === 'number') {\n    this.items.set(item, currentCount + count);\n  }\n  else {\n    this.dimension++;\n    this.items.set(item, count);\n  }\n\n  this.size += count;\n\n  return this;\n};\n\n/**\n * Method used to return whether the item exists in the set.\n *\n * @param  {any} item  - Item to check.\n * @return {boolan}\n */\nMultiSet.prototype.has = function(item) {\n  return this.items.has(item);\n};\n\n/**\n * Method used to delete an item from the set.\n *\n * @param  {any} item  - Item to delete.\n * @return {boolan}\n */\nMultiSet.prototype.delete = function(item) {\n  var count = this.items.get(item);\n\n  if (count === 0)\n    return false;\n\n  this.size -= count;\n  this.dimension--;\n  this.items.delete(item);\n\n  return true;\n};\n\n/**\n * Method used to remove an item from the set.\n *\n * @param  {any} item  - Item to delete.\n * @param  {number} count - Optional count.\n * @return {undefined}\n */\nMultiSet.prototype.remove = function(item, count) {\n  if (count === 0)\n    return;\n\n  if (count < 0)\n    return this.add(item, -count);\n\n  count = count || 1;\n\n  if (typeof count !== 'number')\n    throw new Error('mnemonist/multi-set.remove: given count should be a number.');\n\n  var currentCount = this.multiplicity(item),\n      newCount = Math.max(0, currentCount - count);\n\n  if (newCount === 0) {\n    this.delete(item);\n  }\n  else {\n    this.items.set(item, newCount);\n    this.size -= (currentCount - newCount);\n  }\n\n  return;\n};\n\n/**\n * Method used to change a key into another one, merging counts if the target\n * key already exists.\n *\n * @param  {any} a - From key.\n * @param  {any} b - To key.\n * @return {MultiSet}\n */\nMultiSet.prototype.edit = function(a, b) {\n  var am = this.multiplicity(a);\n\n  // If a does not exist in the set, we can stop right there\n  if (am === 0)\n    return;\n\n  var bm = this.multiplicity(b);\n\n  this.items.set(b, am + bm);\n  this.items.delete(a);\n\n  return this;\n};\n\n/**\n * Method used to return the multiplicity of the given item.\n *\n * @param  {any} item  - Item to get.\n * @return {number}\n */\nMultiSet.prototype.multiplicity = function(item) {\n  var count = this.items.get(item);\n\n  if (typeof count === 'undefined')\n    return 0;\n\n  return count;\n};\nMultiSet.prototype.get = MultiSet.prototype.multiplicity;\nMultiSet.prototype.count = MultiSet.prototype.multiplicity;\n\n/**\n * Method used to return the frequency of the given item in the set.\n *\n * @param  {any} item - Item to get.\n * @return {number}\n */\nMultiSet.prototype.frequency = function(item) {\n  if (this.size === 0)\n    return 0;\n\n  var count = this.multiplicity(item);\n\n  return count / this.size;\n};\n\n/**\n * Method used to return the n most common items from the set.\n *\n * @param  {number} n - Number of items to retrieve.\n * @return {array}\n */\nMultiSet.prototype.top = function(n) {\n  if (typeof n !== 'number' || n <= 0)\n    throw new Error('mnemonist/multi-set.top: n must be a number > 0.');\n\n  var heap = new FixedReverseHeap(Array, MULTISET_ITEM_COMPARATOR, n);\n\n  var iterator = this.items.entries(),\n      step;\n\n  while ((step = iterator.next(), !step.done))\n    heap.push(step.value);\n\n  return heap.consume();\n};\n\n/**\n * Method used to iterate over the set's values.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nMultiSet.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var i;\n\n  this.items.forEach(function(multiplicity, value) {\n\n    for (i = 0; i < multiplicity; i++)\n      callback.call(scope, value, value);\n  });\n};\n\n/**\n * Method used to iterate over the set's multiplicities.\n *\n * @param  {function}  callback - Function to call for each multiplicity.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nMultiSet.prototype.forEachMultiplicity = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  this.items.forEach(callback, scope);\n};\n\n/**\n * Method returning an iterator over the set's keys. I.e. its unique values,\n * in a sense.\n *\n * @return {Iterator}\n */\nMultiSet.prototype.keys = function() {\n  return this.items.keys();\n};\n\n/**\n * Method returning an iterator over the set's values.\n *\n * @return {Iterator}\n */\nMultiSet.prototype.values = function() {\n  var iterator = this.items.entries(),\n      inContainer = false,\n      step,\n      value,\n      multiplicity,\n      i;\n\n  return new Iterator(function next() {\n    if (!inContainer) {\n      step = iterator.next();\n\n      if (step.done)\n        return {done: true};\n\n      inContainer = true;\n      value = step.value[0];\n      multiplicity = step.value[1];\n      i = 0;\n    }\n\n    if (i >= multiplicity) {\n      inContainer = false;\n      return next();\n    }\n\n    i++;\n\n    return {\n      done: false,\n      value: value\n    };\n  });\n};\n\n/**\n * Method returning an iterator over the set's multiplicities.\n *\n * @return {Iterator}\n */\nMultiSet.prototype.multiplicities = function() {\n  return this.items.entries();\n};\n\n/**\n * Attaching the #.entries method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  MultiSet.prototype[Symbol.iterator] = MultiSet.prototype.values;\n\n/**\n * Convenience known methods.\n */\nMultiSet.prototype.inspect = function() {\n  return this.items;\n};\n\nif (typeof Symbol !== 'undefined')\n  MultiSet.prototype[Symbol.for('nodejs.util.inspect.custom')] = MultiSet.prototype.inspect;\nMultiSet.prototype.toJSON = function() {\n  return this.items;\n};\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a structure.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @return {MultiSet}\n */\nMultiSet.from = function(iterable) {\n  var set = new MultiSet();\n\n  forEach(iterable, function(value) {\n    set.add(value);\n  });\n\n  return set;\n};\n\n/**\n * Function returning whether the multiset A is a subset of the multiset B.\n *\n * @param  {MultiSet} A - First set.\n * @param  {MultiSet} B - Second set.\n * @return {boolean}\n */\nMultiSet.isSubset = function(A, B) {\n  var iterator = A.multiplicities(),\n      step,\n      key,\n      mA;\n\n  // Shortcuts\n  if (A === B)\n    return true;\n\n  if (A.dimension > B.dimension)\n    return false;\n\n  while ((step = iterator.next(), !step.done)) {\n    key = step.value[0];\n    mA = step.value[1];\n\n    if (B.multiplicity(key) < mA)\n      return false;\n  }\n\n  return true;\n};\n\n/**\n * Function returning whether the multiset A is a superset of the multiset B.\n *\n * @param  {MultiSet} A - First set.\n * @param  {MultiSet} B - Second set.\n * @return {boolean}\n */\nMultiSet.isSuperset = function(A, B) {\n  return MultiSet.isSubset(B, A);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = MultiSet;\n","/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n\n  // Hiding the given function\n  Object.defineProperty(this, '_next', {\n    writable: false,\n    enumerable: false,\n    value: next\n  });\n\n  // Is the iterator complete?\n  this.done = false;\n}\n\n/**\n * Next function.\n *\n * @return {object}\n */\n// NOTE: maybe this should dropped for performance?\nIterator.prototype.next = function() {\n  if (this.done)\n    return {done: true};\n\n  var step = this._next();\n\n  if (step.done)\n    this.done = true;\n\n  return step;\n};\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function() {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function() {\n  var args = arguments,\n      l = args.length,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function() {\n  var iterator = new Iterator(null);\n  iterator.done = true;\n\n  return iterator;\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function(value) {\n  if (value instanceof Iterator)\n    return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n","/**\n * Mnemonist Fixed Reverse Heap\n * =============================\n *\n * Static heap implementation with fixed capacity. It's a \"reverse\" heap\n * because it stores the elements in reverse so we can replace the worst\n * item in logarithmic time. As such, one cannot pop this heap but can only\n * consume it at the end. This structure is very efficient when trying to\n * find the n smallest/largest items from a larger query (k nearest neigbors\n * for instance).\n */\nvar comparators = require('./utils/comparators.js'),\n    Heap = require('./heap.js');\n\nvar DEFAULT_COMPARATOR = comparators.DEFAULT_COMPARATOR,\n    reverseComparator = comparators.reverseComparator;\n\n/**\n * Helper functions.\n */\n\n/**\n * Function used to sift up.\n *\n * @param {function} compare - Comparison function.\n * @param {array}    heap    - Array storing the heap's data.\n * @param {number}   size    - Heap's true size.\n * @param {number}   i       - Index.\n */\nfunction siftUp(compare, heap, size, i) {\n  var endIndex = size,\n      startIndex = i,\n      item = heap[i],\n      childIndex = 2 * i + 1,\n      rightIndex;\n\n  while (childIndex < endIndex) {\n    rightIndex = childIndex + 1;\n\n    if (\n      rightIndex < endIndex &&\n      compare(heap[childIndex], heap[rightIndex]) >= 0\n    ) {\n      childIndex = rightIndex;\n    }\n\n    heap[i] = heap[childIndex];\n    i = childIndex;\n    childIndex = 2 * i + 1;\n  }\n\n  heap[i] = item;\n  Heap.siftDown(compare, heap, startIndex, i);\n}\n\n/**\n * Fully consumes the given heap.\n *\n * @param  {function} ArrayClass - Array class to use.\n * @param  {function} compare    - Comparison function.\n * @param  {array}    heap       - Array storing the heap's data.\n * @param  {number}   size       - True size of the heap.\n * @return {array}\n */\nfunction consume(ArrayClass, compare, heap, size) {\n  var l = size,\n      i = l;\n\n  var array = new ArrayClass(size),\n      lastItem,\n      item;\n\n  while (i > 0) {\n    lastItem = heap[--i];\n\n    if (i !== 0) {\n      item = heap[0];\n      heap[0] = lastItem;\n      siftUp(compare, heap, --size, 0);\n      lastItem = item;\n    }\n\n    array[i] = lastItem;\n  }\n\n  return array;\n}\n\n/**\n * Binary Minimum FixedReverseHeap.\n *\n * @constructor\n * @param {function} ArrayClass - The class of array to use.\n * @param {function} comparator - Comparator function.\n * @param {number}   capacity   - Maximum number of items to keep.\n */\nfunction FixedReverseHeap(ArrayClass, comparator, capacity) {\n\n  // Comparator can be omitted\n  if (arguments.length === 2) {\n    capacity = comparator;\n    comparator = null;\n  }\n\n  this.ArrayClass = ArrayClass;\n  this.capacity = capacity;\n\n  this.items = new ArrayClass(capacity);\n  this.clear();\n  this.comparator = comparator || DEFAULT_COMPARATOR;\n\n  if (typeof capacity !== 'number' && capacity <= 0)\n    throw new Error('mnemonist/FixedReverseHeap.constructor: capacity should be a number > 0.');\n\n  if (typeof this.comparator !== 'function')\n    throw new Error('mnemonist/FixedReverseHeap.constructor: given comparator should be a function.');\n\n  this.comparator = reverseComparator(this.comparator);\n}\n\n/**\n * Method used to clear the heap.\n *\n * @return {undefined}\n */\nFixedReverseHeap.prototype.clear = function() {\n\n  // Properties\n  this.size = 0;\n};\n\n/**\n * Method used to push an item into the heap.\n *\n * @param  {any}    item - Item to push.\n * @return {number}\n */\nFixedReverseHeap.prototype.push = function(item) {\n\n  // Still some place\n  if (this.size < this.capacity) {\n    this.items[this.size] = item;\n    Heap.siftDown(this.comparator, this.items, 0, this.size);\n    this.size++;\n  }\n\n  // Heap is full, we need to replace worst item\n  else {\n\n    if (this.comparator(item, this.items[0]) > 0)\n      Heap.replace(this.comparator, this.items, item);\n  }\n\n  return this.size;\n};\n\n/**\n * Method used to peek the worst item in the heap.\n *\n * @return {any}\n */\nFixedReverseHeap.prototype.peek = function() {\n  return this.items[0];\n};\n\n/**\n * Method used to consume the heap fully and return its items as a sorted array.\n *\n * @return {array}\n */\nFixedReverseHeap.prototype.consume = function() {\n  var items = consume(this.ArrayClass, this.comparator, this.items, this.size);\n  this.size = 0;\n\n  return items;\n};\n\n/**\n * Method used to convert the heap to an array. Note that it basically clone\n * the heap and consumes it completely. This is hardly performant.\n *\n * @return {array}\n */\nFixedReverseHeap.prototype.toArray = function() {\n  return consume(this.ArrayClass, this.comparator, this.items.slice(0, this.size), this.size);\n};\n\n/**\n * Convenience known methods.\n */\nFixedReverseHeap.prototype.inspect = function() {\n  var proxy = this.toArray();\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: FixedReverseHeap,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  FixedReverseHeap.prototype[Symbol.for('nodejs.util.inspect.custom')] = FixedReverseHeap.prototype.inspect;\n\n/**\n * Exporting.\n */\nmodule.exports = FixedReverseHeap;\n","/**\n * Mnemonist Binary Heap\n * ======================\n *\n * Binary heap implementation.\n */\nvar forEach = require('obliterator/foreach'),\n    comparators = require('./utils/comparators.js'),\n    iterables = require('./utils/iterables.js');\n\nvar DEFAULT_COMPARATOR = comparators.DEFAULT_COMPARATOR,\n    reverseComparator = comparators.reverseComparator;\n\n/**\n * Heap helper functions.\n */\n\n/**\n * Function used to sift down.\n *\n * @param {function} compare    - Comparison function.\n * @param {array}    heap       - Array storing the heap's data.\n * @param {number}   startIndex - Starting index.\n * @param {number}   i          - Index.\n */\nfunction siftDown(compare, heap, startIndex, i) {\n  var item = heap[i],\n      parentIndex,\n      parent;\n\n  while (i > startIndex) {\n    parentIndex = (i - 1) >> 1;\n    parent = heap[parentIndex];\n\n    if (compare(item, parent) < 0) {\n      heap[i] = parent;\n      i = parentIndex;\n      continue;\n    }\n\n    break;\n  }\n\n  heap[i] = item;\n}\n\n/**\n * Function used to sift up.\n *\n * @param {function} compare - Comparison function.\n * @param {array}    heap    - Array storing the heap's data.\n * @param {number}   i       - Index.\n */\nfunction siftUp(compare, heap, i) {\n  var endIndex = heap.length,\n      startIndex = i,\n      item = heap[i],\n      childIndex = 2 * i + 1,\n      rightIndex;\n\n  while (childIndex < endIndex) {\n    rightIndex = childIndex + 1;\n\n    if (\n      rightIndex < endIndex &&\n      compare(heap[childIndex], heap[rightIndex]) >= 0\n    ) {\n      childIndex = rightIndex;\n    }\n\n    heap[i] = heap[childIndex];\n    i = childIndex;\n    childIndex = 2 * i + 1;\n  }\n\n  heap[i] = item;\n  siftDown(compare, heap, startIndex, i);\n}\n\n/**\n * Function used to push an item into a heap represented by a raw array.\n *\n * @param {function} compare - Comparison function.\n * @param {array}    heap    - Array storing the heap's data.\n * @param {any}      item    - Item to push.\n */\nfunction push(compare, heap, item) {\n  heap.push(item);\n  siftDown(compare, heap, 0, heap.length - 1);\n}\n\n/**\n * Function used to pop an item from a heap represented by a raw array.\n *\n * @param  {function} compare - Comparison function.\n * @param  {array}    heap    - Array storing the heap's data.\n * @return {any}\n */\nfunction pop(compare, heap) {\n  var lastItem = heap.pop();\n\n  if (heap.length !== 0) {\n    var item = heap[0];\n    heap[0] = lastItem;\n    siftUp(compare, heap, 0);\n\n    return item;\n  }\n\n  return lastItem;\n}\n\n/**\n * Function used to pop the heap then push a new value into it, thus \"replacing\"\n * it.\n *\n * @param  {function} compare - Comparison function.\n * @param  {array}    heap    - Array storing the heap's data.\n * @param  {any}      item    - The item to push.\n * @return {any}\n */\nfunction replace(compare, heap, item) {\n  if (heap.length === 0)\n    throw new Error('mnemonist/heap.replace: cannot pop an empty heap.');\n\n  var popped = heap[0];\n  heap[0] = item;\n  siftUp(compare, heap, 0);\n\n  return popped;\n}\n\n/**\n * Function used to push an item in the heap then pop the heap and return the\n * popped value.\n *\n * @param  {function} compare - Comparison function.\n * @param  {array}    heap    - Array storing the heap's data.\n * @param  {any}      item    - The item to push.\n * @return {any}\n */\nfunction pushpop(compare, heap, item) {\n  var tmp;\n\n  if (heap.length !== 0 && compare(heap[0], item) < 0) {\n    tmp = heap[0];\n    heap[0] = item;\n    item = tmp;\n    siftUp(compare, heap, 0);\n  }\n\n  return item;\n}\n\n/**\n * Converts and array into an abstract heap in linear time.\n *\n * @param {function} compare - Comparison function.\n * @param {array}    array   - Target array.\n */\nfunction heapify(compare, array) {\n  var n = array.length,\n      l = n >> 1,\n      i = l;\n\n  while (--i >= 0)\n    siftUp(compare, array, i);\n}\n\n/**\n * Fully consumes the given heap.\n *\n * @param  {function} compare - Comparison function.\n * @param  {array}    heap    - Array storing the heap's data.\n * @return {array}\n */\nfunction consume(compare, heap) {\n  var l = heap.length,\n      i = 0;\n\n  var array = new Array(l);\n\n  while (i < l)\n    array[i++] = pop(compare, heap);\n\n  return array;\n}\n\n/**\n * Function used to retrieve the n smallest items from the given iterable.\n *\n * @param {function} compare  - Comparison function.\n * @param {number}   n        - Number of top items to retrieve.\n * @param {any}      iterable - Arbitrary iterable.\n * @param {array}\n */\nfunction nsmallest(compare, n, iterable) {\n  if (arguments.length === 2) {\n    iterable = n;\n    n = compare;\n    compare = DEFAULT_COMPARATOR;\n  }\n\n  var reverseCompare = reverseComparator(compare);\n\n  var i, l, v;\n\n  var min = Infinity;\n\n  var result;\n\n  // If n is equal to 1, it's just a matter of finding the minimum\n  if (n === 1) {\n    if (iterables.isArrayLike(iterable)) {\n      for (i = 0, l = iterable.length; i < l; i++) {\n        v = iterable[i];\n\n        if (min === Infinity || compare(v, min) < 0)\n          min = v;\n      }\n\n      result = new iterable.constructor(1);\n      result[0] = min;\n\n      return result;\n    }\n\n    forEach(iterable, function(value) {\n      if (min === Infinity || compare(value, min) < 0)\n        min = value;\n    });\n\n    return [min];\n  }\n\n  if (iterables.isArrayLike(iterable)) {\n\n    // If n > iterable length, we just clone and sort\n    if (n >= iterable.length)\n      return iterable.slice().sort(compare);\n\n    result = iterable.slice(0, n);\n    heapify(reverseCompare, result);\n\n    for (i = n, l = iterable.length; i < l; i++)\n      if (reverseCompare(iterable[i], result[0]) > 0)\n        replace(reverseCompare, result, iterable[i]);\n\n    // NOTE: if n is over some number, it becomes faster to consume the heap\n    return result.sort(compare);\n  }\n\n  // Correct for size\n  var size = iterables.guessLength(iterable);\n\n  if (size !== null && size < n)\n    n = size;\n\n  result = new Array(n);\n  i = 0;\n\n  forEach(iterable, function(value) {\n    if (i < n) {\n      result[i] = value;\n    }\n    else {\n      if (i === n)\n        heapify(reverseCompare, result);\n\n      if (reverseCompare(value, result[0]) > 0)\n        replace(reverseCompare, result, value);\n    }\n\n    i++;\n  });\n\n  if (result.length > i)\n    result.length = i;\n\n  // NOTE: if n is over some number, it becomes faster to consume the heap\n  return result.sort(compare);\n}\n\n/**\n * Function used to retrieve the n largest items from the given iterable.\n *\n * @param {function} compare  - Comparison function.\n * @param {number}   n        - Number of top items to retrieve.\n * @param {any}      iterable - Arbitrary iterable.\n * @param {array}\n */\nfunction nlargest(compare, n, iterable) {\n  if (arguments.length === 2) {\n    iterable = n;\n    n = compare;\n    compare = DEFAULT_COMPARATOR;\n  }\n\n  var reverseCompare = reverseComparator(compare);\n\n  var i, l, v;\n\n  var max = -Infinity;\n\n  var result;\n\n  // If n is equal to 1, it's just a matter of finding the maximum\n  if (n === 1) {\n    if (iterables.isArrayLike(iterable)) {\n      for (i = 0, l = iterable.length; i < l; i++) {\n        v = iterable[i];\n\n        if (max === -Infinity || compare(v, max) > 0)\n          max = v;\n      }\n\n      result = new iterable.constructor(1);\n      result[0] = max;\n\n      return result;\n    }\n\n    forEach(iterable, function(value) {\n      if (max === -Infinity || compare(value, max) > 0)\n        max = value;\n    });\n\n    return [max];\n  }\n\n  if (iterables.isArrayLike(iterable)) {\n\n    // If n > iterable length, we just clone and sort\n    if (n >= iterable.length)\n      return iterable.slice().sort(reverseCompare);\n\n    result = iterable.slice(0, n);\n    heapify(compare, result);\n\n    for (i = n, l = iterable.length; i < l; i++)\n      if (compare(iterable[i], result[0]) > 0)\n        replace(compare, result, iterable[i]);\n\n    // NOTE: if n is over some number, it becomes faster to consume the heap\n    return result.sort(reverseCompare);\n  }\n\n  // Correct for size\n  var size = iterables.guessLength(iterable);\n\n  if (size !== null && size < n)\n    n = size;\n\n  result = new Array(n);\n  i = 0;\n\n  forEach(iterable, function(value) {\n    if (i < n) {\n      result[i] = value;\n    }\n    else {\n      if (i === n)\n        heapify(compare, result);\n\n      if (compare(value, result[0]) > 0)\n        replace(compare, result, value);\n    }\n\n    i++;\n  });\n\n  if (result.length > i)\n    result.length = i;\n\n  // NOTE: if n is over some number, it becomes faster to consume the heap\n  return result.sort(reverseCompare);\n}\n\n/**\n * Binary Minimum Heap.\n *\n * @constructor\n * @param {function} comparator - Comparator function to use.\n */\nfunction Heap(comparator) {\n  this.clear();\n  this.comparator = comparator || DEFAULT_COMPARATOR;\n\n  if (typeof this.comparator !== 'function')\n    throw new Error('mnemonist/Heap.constructor: given comparator should be a function.');\n}\n\n/**\n * Method used to clear the heap.\n *\n * @return {undefined}\n */\nHeap.prototype.clear = function() {\n\n  // Properties\n  this.items = [];\n  this.size = 0;\n};\n\n/**\n * Method used to push an item into the heap.\n *\n * @param  {any}    item - Item to push.\n * @return {number}\n */\nHeap.prototype.push = function(item) {\n  push(this.comparator, this.items, item);\n  return ++this.size;\n};\n\n/**\n * Method used to retrieve the \"first\" item of the heap.\n *\n * @return {any}\n */\nHeap.prototype.peek = function() {\n  return this.items[0];\n};\n\n/**\n * Method used to retrieve & remove the \"first\" item of the heap.\n *\n * @return {any}\n */\nHeap.prototype.pop = function() {\n  if (this.size !== 0)\n    this.size--;\n\n  return pop(this.comparator, this.items);\n};\n\n/**\n * Method used to pop the heap, then push an item and return the popped\n * item.\n *\n * @param  {any} item - Item to push into the heap.\n * @return {any}\n */\nHeap.prototype.replace = function(item) {\n  return replace(this.comparator, this.items, item);\n};\n\n/**\n * Method used to push the heap, the pop it and return the pooped item.\n *\n * @param  {any} item - Item to push into the heap.\n * @return {any}\n */\nHeap.prototype.pushpop = function(item) {\n  return pushpop(this.comparator, this.items, item);\n};\n\n/**\n * Method used to consume the heap fully and return its items as a sorted array.\n *\n * @return {array}\n */\nHeap.prototype.consume = function() {\n  this.size = 0;\n  return consume(this.comparator, this.items);\n};\n\n/**\n * Method used to convert the heap to an array. Note that it basically clone\n * the heap and consumes it completely. This is hardly performant.\n *\n * @return {array}\n */\nHeap.prototype.toArray = function() {\n  return consume(this.comparator, this.items.slice());\n};\n\n/**\n * Convenience known methods.\n */\nHeap.prototype.inspect = function() {\n  var proxy = this.toArray();\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: Heap,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  Heap.prototype[Symbol.for('nodejs.util.inspect.custom')] = Heap.prototype.inspect;\n\n/**\n * Binary Maximum Heap.\n *\n * @constructor\n * @param {function} comparator - Comparator function to use.\n */\nfunction MaxHeap(comparator) {\n  this.clear();\n  this.comparator = comparator || DEFAULT_COMPARATOR;\n\n  if (typeof this.comparator !== 'function')\n    throw new Error('mnemonist/MaxHeap.constructor: given comparator should be a function.');\n\n  this.comparator = reverseComparator(this.comparator);\n}\n\nMaxHeap.prototype = Heap.prototype;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a heap.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @param  {function} comparator - Custom comparator function.\n * @return {Heap}\n */\nHeap.from = function(iterable, comparator) {\n  var heap = new Heap(comparator);\n\n  var items;\n\n  // If iterable is an array, we can be clever about it\n  if (iterables.isArrayLike(iterable))\n    items = iterable.slice();\n  else\n    items = iterables.toArray(iterable);\n\n  heapify(heap.comparator, items);\n  heap.items = items;\n  heap.size = items.length;\n\n  return heap;\n};\n\nMaxHeap.from = function(iterable, comparator) {\n  var heap = new MaxHeap(comparator);\n\n  var items;\n\n  // If iterable is an array, we can be clever about it\n  if (iterables.isArrayLike(iterable))\n    items = iterable.slice();\n  else\n    items = iterables.toArray(iterable);\n\n  heapify(heap.comparator, items);\n  heap.items = items;\n  heap.size = items.length;\n\n  return heap;\n};\n\n/**\n * Exporting.\n */\nHeap.siftUp = siftUp;\nHeap.siftDown = siftDown;\nHeap.push = push;\nHeap.pop = pop;\nHeap.replace = replace;\nHeap.pushpop = pushpop;\nHeap.heapify = heapify;\nHeap.consume = consume;\n\nHeap.nsmallest = nsmallest;\nHeap.nlargest = nlargest;\n\nHeap.MinHeap = Heap;\nHeap.MaxHeap = MaxHeap;\n\nmodule.exports = Heap;\n","/**\n * Mnemonist Iterable Function\n * ============================\n *\n * Harmonized iteration helpers over mixed iterable targets.\n */\nvar forEach = require('obliterator/foreach');\n\nvar isTypedArray = require('./typed-arrays.js').isTypedArray;\n\n/**\n * Function used to determine whether the given object supports array-like\n * random access.\n *\n * @param  {any} target - Target object.\n * @return {boolean}\n */\nfunction isArrayLike(target) {\n  return Array.isArray(target) || isTypedArray(target);\n}\n\n/**\n * Function used to guess the length of the structure over which we are going\n * to iterate.\n *\n * @param  {any} target - Target object.\n * @return {number|undefined}\n */\nfunction guessLength(target) {\n  if (typeof target.length === 'number')\n    return target.length;\n\n  if (typeof target.size === 'number')\n    return target.size;\n\n  return;\n}\n\n/**\n * Function used to convert an iterable to an array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArray(target) {\n  var l = guessLength(target);\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n\n  var i = 0;\n\n  forEach(target, function(value) {\n    array[i++] = value;\n  });\n\n  return array;\n}\n\n/**\n * Exporting.\n */\nexports.isArrayLike = isArrayLike;\nexports.guessLength = guessLength;\nexports.toArray = toArray;\n","/**\n * Mnemonist Typed Array Helpers\n * ==============================\n *\n * Miscellaneous helpers related to typed arrays.\n */\n\n/**\n * When using an unsigned integer array to store pointers, one might want to\n * choose the optimal word size in regards to the actual numbers of pointers\n * to store.\n *\n * This helpers does just that.\n *\n * @param  {number} size - Expected size of the array to map.\n * @return {TypedArray}\n */\nvar MAX_8BIT_INTEGER = Math.pow(2, 8) - 1,\n    MAX_16BIT_INTEGER = Math.pow(2, 16) - 1,\n    MAX_32BIT_INTEGER = Math.pow(2, 32) - 1;\n\nvar MAX_SIGNED_8BIT_INTEGER = Math.pow(2, 7) - 1,\n    MAX_SIGNED_16BIT_INTEGER = Math.pow(2, 15) - 1,\n    MAX_SIGNED_32BIT_INTEGER = Math.pow(2, 31) - 1;\n\nexports.getPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_8BIT_INTEGER)\n    return Uint8Array;\n\n  if (maxIndex <= MAX_16BIT_INTEGER)\n    return Uint16Array;\n\n  if (maxIndex <= MAX_32BIT_INTEGER)\n    return Uint32Array;\n\n  return Float64Array;\n};\n\nexports.getSignedPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_SIGNED_8BIT_INTEGER)\n    return Int8Array;\n\n  if (maxIndex <= MAX_SIGNED_16BIT_INTEGER)\n    return Int16Array;\n\n  if (maxIndex <= MAX_SIGNED_32BIT_INTEGER)\n    return Int32Array;\n\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given number.\n *\n * @param  {number} value - Value to test.\n * @return {TypedArrayClass}\n */\nexports.getNumberType = function(value) {\n\n  // <= 32 bits itnteger?\n  if (value === (value | 0)) {\n\n    // Negative\n    if (Math.sign(value) === -1) {\n      if (value <= 127 && value >= -128)\n        return Int8Array;\n\n      if (value <= 32767 && value >= -32768)\n        return Int16Array;\n\n      return Int32Array;\n    }\n    else {\n\n      if (value <= 255)\n        return Uint8Array;\n\n      if (value <= 65535)\n        return Uint16Array;\n\n      return Uint32Array;\n    }\n  }\n\n  // 53 bits integer & floats\n  // NOTE: it's kinda hard to tell whether we could use 32bits or not...\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given array\n * of JavaScript numbers.\n *\n * @param  {array}    array  - Array to represent.\n * @param  {function} getter - Optional getter.\n * @return {TypedArrayClass}\n */\nvar TYPE_PRIORITY = {\n  Uint8Array: 1,\n  Int8Array: 2,\n  Uint16Array: 3,\n  Int16Array: 4,\n  Uint32Array: 5,\n  Int32Array: 6,\n  Float32Array: 7,\n  Float64Array: 8\n};\n\n// TODO: make this a one-shot for one value\nexports.getMinimalRepresentation = function(array, getter) {\n  var maxType = null,\n      maxPriority = 0,\n      p,\n      t,\n      v,\n      i,\n      l;\n\n  for (i = 0, l = array.length; i < l; i++) {\n    v = getter ? getter(array[i]) : array[i];\n    t = exports.getNumberType(v);\n    p = TYPE_PRIORITY[t.name];\n\n    if (p > maxPriority) {\n      maxPriority = p;\n      maxType = t;\n    }\n  }\n\n  return maxType;\n};\n\n/**\n * Function returning whether the given value is a typed array.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nexports.isTypedArray = function(value) {\n  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(value);\n};\n\n/**\n * Function used to concat byte arrays.\n *\n * @param  {...ByteArray}\n * @return {ByteArray}\n */\nexports.concat = function() {\n  var length = 0,\n      i,\n      o,\n      l;\n\n  for (i = 0, l = arguments.length; i < l; i++)\n    length += arguments[i].length;\n\n  var array = new (arguments[0].constructor)(length);\n\n  for (i = 0, o = 0; i < l; i++) {\n    array.set(arguments[i], o);\n    o += arguments[i].length;\n  }\n\n  return array;\n};\n\n/**\n * Function used to initialize a byte array of indices.\n *\n * @param  {number}    length - Length of target.\n * @return {ByteArray}\n */\nexports.indices = function(length) {\n  var PointerArray = exports.getPointerArray(length);\n\n  var array = new PointerArray(length);\n\n  for (var i = 0; i < length; i++)\n    array[i] = i;\n\n  return array;\n};\n","import MultiSet from 'mnemonist/multi-set';\n\n/** An object that can be animated. */\nexport interface Animatable {\n  /**\n   * Draws a frame given the current time.\n   * @param t The current time in seconds.\n   * @returns Whether te re-call this Animatable on the next frame.\n   */\n  drawFrame(t: number): boolean;\n\n  /**\n   * Is this animation currently playing?\n   * More precisely, has the last frame of this animation finished?\n   */\n  isPlaying(): boolean;\n\n  /** Starts playing the animation. */\n  play(): void;\n\n  /** Stops playing the animation. */\n  stop(): void;\n}\n\n/**\n * A callback called on each frame with the amount progressed through the\n * animation. amount is a number in the range [0, 1] that indicates how far\n * through the animation to draw.\n */\nexport type FrameCallback = (amount: number) => void;\n/** Called when an animation is finished executing. */\nexport type AnimationFinishedCallback = () => void;\n\n/** An animation that has a certain length. */\nexport class Animation implements Animatable {\n  /** The duration of the animation in seconds. */\n  duration_sec: number;\n\n  /** The time when the animation started. */\n  private start_: number;\n\n  /** The callback for each frame. */\n  private onframe_: FrameCallback;\n\n  /** The callback for when the animation finishes. */\n  private onfinish_?: AnimationFinishedCallback;\n\n  constructor(\n    duration_sec: number,\n    onframe: FrameCallback,\n    onfinish?: AnimationFinishedCallback\n  ) {\n    if (duration_sec <= 0) {\n      throw new RangeError('duration_sec ≤ 0');\n    }\n    this.duration_sec = duration_sec;\n    this.onframe_ = onframe;\n    this.onfinish_ = onfinish;\n    this.start_ = 0;\n  }\n\n  /** Will the animation play on the next frame? */\n  isPlaying(): boolean {\n    return AnimationManager.getInstance().isScheduled(this);\n  }\n\n  /** Play the animation, changing the duration if desired. */\n  play(duration_sec: number = this.duration_sec): void {\n    if (duration_sec <= 0) {\n      throw new RangeError('duration_sec ≤ 0');\n    }\n    this.duration_sec = duration_sec;\n    this.start_ = performance.now();\n    AnimationManager.getInstance().schedule(this);\n  }\n\n  /** Stop the animation. */\n  stop(): void {\n    AnimationManager.getInstance().unschedule(this);\n    if (this.onfinish_) {\n      this.onfinish_();\n    }\n  }\n\n  /** Draw a frame at the given time. */\n  drawFrame(t: number): boolean {\n    const amount = (t - this.start_) / (this.duration_sec * 1000);\n    let playOnNextFrame = true;\n    try {\n      this.onframe_(Math.min(Math.max(0, amount), 1));\n    } finally {\n      if (amount >= 1) {\n        if (this.onfinish_) {\n          this.onfinish_();\n        }\n        playOnNextFrame = false;\n      }\n    }\n    return playOnNextFrame;\n  }\n}\n\n/** Manages a set of animations. */\nexport class AnimationManager {\n  private animationFrameId_: number | null;\n  private playing_: MultiSet<Animatable>;\n  private static instance_: AnimationManager;\n\n  static getInstance(): AnimationManager {\n    if (!this.instance_) {\n      this.instance_ = new AnimationManager();\n    }\n    return this.instance_;\n  }\n\n  private constructor() {\n    this.animationFrameId_ = null;\n    this.playing_ = new MultiSet<Animatable>();\n  }\n\n  /** Schedule the animatable to play on the next frame. */\n  schedule(a: Animatable) {\n    this.playing_.add(a);\n    this.startAnimating_();\n  }\n\n  /** Unschedule the animatable to prevent it playing on the next frame. */\n  unschedule(a: Animatable) {\n    this.playing_.delete(a);\n  }\n\n  /** Returns whether a given animatable will run on the next frame. */\n  isScheduled(a: Animatable): boolean {\n    return this.playing_.has(a);\n  }\n\n  /** Plays every animatable scheduled, unscheduling if requested. */\n  private animationFrame_(t: number) {\n    try {\n      for (const a of Array.from(this.playing_)) {\n        if (!a.drawFrame.call(a, t)) {\n          this.playing_.remove(a);\n        }\n      }\n    } catch (err) {\n      this.playing_.clear();\n      throw err;\n    } finally {\n      this.animationFrameId_ = null;\n      if (this.playing_.size > 0) {\n        this.animationFrameId_ = window.requestAnimationFrame(\n          this.animationFrame_.bind(this)\n        );\n      }\n    }\n  }\n\n  private startAnimating_() {\n    if (this.animationFrameId_ === null) {\n      this.animationFrameId_ = window.requestAnimationFrame(\n        this.animationFrame_.bind(this)\n      );\n    }\n  }\n\n  private cancelAnimating_() {\n    if (this.animationFrameId_ !== null) {\n      window.cancelAnimationFrame(this.animationFrameId_);\n      this.animationFrameId_ = null;\n    }\n  }\n}\n","import {NUM_ANGLES, NUM_RINGS} from './ring';\n\nexport type RingSubring = {type: 'ring'; r: number};\nexport type RingRow = {type: 'row'; th: number};\nexport type RingGroupType = 'ring' | 'row';\nexport type RingGroup = RingSubring | RingRow;\n\nexport type RingRotate = RingSubring & {clockwise: boolean; amount: number};\nexport type RingShift = RingRow & {outward: boolean; amount: number};\nexport type RingMovement = RingRotate | RingShift;\n\n/**\n * Simplifies a movement, reducing it to its quickest form.\n * @param m The movement to simplify.\n */\nexport function simplifyMovement(m: RingMovement): RingMovement {\n  if (m.type === 'ring') {\n    if (m.amount <= 0) {\n      return {...m, amount: -m.amount, clockwise: !m.clockwise};\n    }\n    const amount = m.amount % NUM_ANGLES;\n    if (amount > NUM_ANGLES / 2) {\n      return {...m, amount: NUM_ANGLES - amount, clockwise: !m.clockwise};\n    }\n    return {...m, amount};\n  }\n  if (m.amount <= 0) {\n    return {...m, amount: -m.amount, outward: !m.outward};\n  }\n  const amount = m.amount % (NUM_RINGS * 2);\n  if (amount > NUM_RINGS) {\n    return {...m, amount: NUM_RINGS * 2 - amount, outward: !m.outward};\n  }\n  return {...m, amount};\n}\n\n/**\n * Combine two movements of the same type.\n * @param m1 The first movement, or null if none.\n * @param m2 The second movement.\n * @returns The combined movement, or null if no movement.\n * @throws If the movements are not of the same type.\n */\nexport function combineMovements(\n  m1: RingMovement | null,\n  m2: RingMovement\n): RingMovement | null {\n  if (m1 === null) {\n    return m2;\n  }\n  if (m1.type === 'ring' && m2.type === 'ring') {\n    if (m1.r !== m2.r) {\n      return null;\n    }\n    const amount =\n      (m1.clockwise ? m1.amount : -m1.amount) +\n      (m2.clockwise ? m2.amount : -m2.amount);\n    if (amount === 0) {\n      return null;\n    }\n    return simplifyMovement({\n      type: 'ring',\n      amount: Math.abs(amount),\n      clockwise: amount > 0,\n      r: m1.r,\n    });\n  } else if (m1.type === 'row' && m2.type === 'row') {\n    if (m1.th !== m2.th) {\n      return null;\n    }\n    const amount =\n      (m1.outward ? m1.amount : -m1.amount) +\n      (m2.outward ? m2.amount : -m2.amount);\n    if (amount === 0) {\n      return null;\n    }\n    return simplifyMovement({\n      type: 'row',\n      amount: Math.abs(amount),\n      outward: amount > 0,\n      th: m1.th,\n    });\n  }\n  throw new Error('Cannot combine incompatible movements');\n}\n\n/**\n * Reverses a movement.\n * combineMovements(m, reverseMovement(m)) === null for every m.\n * @param m The movement to reverse.\n */\nexport function reverseMovement(m: RingMovement): RingMovement {\n  if (m.type === 'ring') {\n    return {...m, clockwise: !m.clockwise};\n  } else {\n    return {...m, outward: !m.outward};\n  }\n}\n\n/**\n * Returns whether the movement is considered \"negative\" for the\n * purposes of animation.\n */\nexport function isNegativeMovement(m: RingMovement): boolean {\n  return (\n    (m.type === 'ring' && !m.clockwise) || (m.type === 'row' && !m.outward)\n  );\n}\n\n/**\n * Keeps track of multiple movements and move history for a ring.\n */\nexport class MoveHistory {\n  private moves_: (RingMovement | null)[];\n  private readonly ringMovesDisplay_: HTMLElement;\n\n  constructor(ringMovesDisplay: HTMLElement) {\n    this.ringMovesDisplay_ = ringMovesDisplay;\n    this.moves_ = [];\n  }\n\n  addMovement(m: RingMovement | null) {\n    this.moves_.push(m);\n    this.updateDisplay();\n  }\n\n  get empty(): boolean {\n    return this.moves_.length === 0;\n  }\n\n  // Precondition: !empty\n  popMovement(): RingMovement | null {\n    const m = this.moves_.pop();\n    if (m === undefined) {\n      throw Error('No movements to pop');\n    }\n    this.updateDisplay();\n    return m;\n  }\n\n  private updateDisplay() {\n    this.ringMovesDisplay_.innerText = '×' + this.moves_.length;\n  }\n}\n","import {Animation} from './animation';\nimport {\n  RingGroup,\n  RingGroupType,\n  RingMovement,\n  isNegativeMovement,\n} from './movement';\n\ntype Context = CanvasRenderingContext2D;\n\n/**\n * To make drawing simpler, the canvases for drawing parts of the board are\n * done in layers. These are their names.\n * In order from top to bottom:\n *  - overlay: The inner and outer borders, hides a lot of visual artifacts.\n *  - enemy:   Where enemies are drawn.\n *  - cursor:  Where the cursor (only on desktop) is drawn.\n *  - ring:    Where the actual cells of the ring itself are drawn.\n */\ntype LayerName = 'overlay' | 'enemy' | 'cursor' | 'ring';\n\ntype Layers = {\n  [name in LayerName]: Context;\n};\n\ntype Canvases = {\n  [name in LayerName]: HTMLCanvasElement;\n};\n\ninterface Size {\n  width: number;\n  height: number;\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * Specifies a unique position on the ring.\n * Equivalent to (x,y) for a 2D plane, but on a ring instead.\n */\nexport interface RingPosition {\n  /**\n   * The subring position, where 0 is the most inner subring.\n   */\n  r: number;\n\n  /**\n   * The angular position, where 0 is the rightmost angle and increases\n   * clockwise. Short for theta/θ, used for angles.\n   */\n  th: number;\n}\n\n/**\n * The radius of the inner circle, i.e. the inner radius of the first subring.\n */\nexport const R0 = 60;\n\n/**\n * The radial width of each cell/subring.\n */\nexport const CELL_WIDTH = 32;\n\n/** The number of rings in the puzzle. */\nexport const NUM_RINGS = 4;\n\n/** The number of different angles (i.e. \"jumps\") in the puzzle. */\nexport const NUM_ANGLES = 12;\nif (NUM_ANGLES % 2 !== 0) {\n  throw new RangeError('NUM_ANGLES not even!');\n}\n\n/** The total number of cells, derived. */\nexport const NUM_CELLS = NUM_RINGS * NUM_ANGLES;\n\n/** The angle, in radians, each cell takes up. */\nexport const CELL_ANGLE = (2 * Math.PI) / NUM_ANGLES;\nexport const OUTSIDE_WIDTH = 40;\n\n/** The size of the logical container for the ring. */\nexport const FRAME: Size = {\n  width: (R0 + NUM_RINGS * CELL_WIDTH + OUTSIDE_WIDTH) * 2,\n  height: (R0 + NUM_RINGS * CELL_WIDTH + OUTSIDE_WIDTH) * 2,\n};\n\n/** Different styles of animation for moving the ring. */\nexport enum AnimationMode {\n  /** No animation will be done. */\n  NONE = 0,\n\n  /** Normal animation, for forwards movement. */\n  NORMAL = 1,\n\n  /** Fast animation, for quick undos. */\n  UNDO = 2,\n}\n\n/** The time, in seconds, for a ring to rotate one unit. */\nconst RING_ROTATE_ANIMATION_TIME = 0.15;\n\n/** The time, in seconds, for a ring to rotate one unit when undoing. */\nconst RING_UNDO_ROTATE_ANIMATION_TIME = 0.05;\n\n/** The time, in seconds, for a row to shift one unit. */\nconst RING_SHIFT_ANIMATION_TIME = 0.2;\n\n/** The time, in seconds, for a row to shift one unit when undoing. */\nconst RING_UNDO_SHIFT_ANIMATION_TIME = 0.08;\n\n/** The fill color of the lighter cells. */\nconst CELL1_FILL = '#ada786';\n/** The fill color of the darker cells. */\nconst CELL2_FILL = '#8f8a6d';\n/** The border color of each cell. */\nconst CELL_BORDER = 'black';\nconst CELL_BORDER_WIDTH = 0.8;\n\n/** The fill color for the inside ring. */\nconst INSIDE_FILL = '#a64250';\n/** The border color for the inside ring. */\nconst INSIDE_BORDER = '#bf7e56';\n/** The width of the border of the inside ring. */\nconst INSIDE_BORDER_WIDTH = 6;\n\n/** The fill color for the outside ring. */\nconst OUTSIDE_FILL = '#5AE67C';\n/** The border color for the outside ring. */\nconst OUTSIDE_BORDER = '#99851A';\n/** The width of the border of the outside ring. */\nconst OUTSIDE_BORDER_WIDTH = 6;\n\nconst ENEMY_COLOR = '#ee0';\nconst ENEMY_RADIUS = 9;\n\n/** Gets the center of a cell for a given ring position. */\nfunction cellCenter({th, r}: RingPosition) {\n  return {\n    x: (R0 + (r + 0.5) * CELL_WIDTH) * Math.cos((th + 0.5) * CELL_ANGLE),\n    y: (R0 + (r + 0.5) * CELL_WIDTH) * Math.sin((th + 0.5) * CELL_ANGLE),\n  };\n}\n\n/** Gets the expected animation speed for a group type and animation mode. */\nfunction animationSpeed(type: RingGroupType, animate: AnimationMode): number {\n  switch (animate) {\n    case AnimationMode.NONE:\n      return 0;\n    case AnimationMode.NORMAL:\n      return type === 'ring'\n        ? RING_ROTATE_ANIMATION_TIME\n        : RING_SHIFT_ANIMATION_TIME;\n    case AnimationMode.UNDO:\n      return type === 'ring'\n        ? RING_UNDO_ROTATE_ANIMATION_TIME\n        : RING_UNDO_SHIFT_ANIMATION_TIME;\n  }\n}\n\n/**\n * Draws a filled arc or \"wedge\", also the shape of each ring cell.\n * @param ctx The context to manipulate.\n * @param x The x position of the arc center.\n * @param y The y position of the arc center.\n * @param r1 The inner radius.\n * @param r2 The outer radius.\n * @param startAngle The starting angle of the wedge.\n * @param endAngle The ending angle of the wedge.\n * @param anticlockwise Whether to draw the arc anticlockwise.\n */\nexport function filledArc(\n  ctx: Context,\n  x: number,\n  y: number,\n  r1: number,\n  r2: number,\n  startAngle: number,\n  endAngle: number,\n  anticlockwise = false\n) {\n  ctx.arc(x, y, r1, startAngle, endAngle, anticlockwise);\n  ctx.arc(x, y, r2, endAngle, startAngle, !anticlockwise);\n  ctx.closePath();\n}\n\n/**\n * Like ctx.stroke, but only on the inner part of a path, so it doesn't go\n * outside. See https://stackoverflow.com/a/45125187.\n * @param ctx The context to manipulate.\n */\nfunction innerStroke(ctx: Context) {\n  ctx.save();\n  ctx.clip();\n  ctx.fill();\n  ctx.stroke();\n  ctx.restore();\n}\n\n/**\n * Gets the contexts for a set of canvases, verifying important properties.\n * @param canvases The set of canvases to convert.\n */\nfunction canvasesToLayers(canvases: Canvases): Layers {\n  const canvasSize = {\n    width: canvases.ring.width,\n    height: canvases.ring.height,\n  };\n  const layers = {} as Layers;\n  for (const layerName in canvases) {\n    const canvas = canvases[layerName as LayerName];\n    if (\n      canvas.width !== canvasSize.width ||\n      canvas.height !== canvasSize.height\n    ) {\n      throw new RangeError('Uneven canvas size!');\n    }\n    if (!canvas.getContext) {\n      throw new ReferenceError('No canvas context!');\n    }\n    const ctx = canvas.getContext('2d');\n    if (ctx === null) {\n      throw new ReferenceError('canvas.getContext null');\n    }\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.scale(canvas.width / FRAME.width, canvas.height / FRAME.height);\n    layers[layerName as LayerName] = ctx;\n  }\n  return layers;\n}\n\n/**\n * Stores the data necessary to draw and manipulate a single cell on a ring.\n * Notably, this doesn't contain the actual position of the cell. That's done\n * by the model itelf.\n */\nclass Cell {\n  /** Does this cell currently contain an enemy? */\n  hasEnemy: boolean;\n\n  /** The fill style of the cell, used for drawing. */\n  private readonly fill_: string;\n\n  constructor(fill: string) {\n    this.fill_ = fill;\n    this.hasEnemy = false;\n  }\n\n  /**\n   * Draw the base of the cell, where the floor is.\n   * @param ctx The context to draw on, expected to be the 'ring' layer.\n   * @param pos The ring position to draw at. May be a non-integer.\n   */\n  drawBase(ctx: Context, pos: RingPosition) {\n    ctx.strokeStyle = CELL_BORDER;\n    ctx.fillStyle = this.fill_;\n    ctx.lineWidth = CELL_BORDER_WIDTH;\n    this.basePath(ctx, pos);\n    innerStroke(ctx);\n  }\n\n  /**\n   * Draw the top of the cell, where the enemies are.\n   * @param ctx The context to draw on, expected to be the 'enemy' layer.\n   * @param pos The ring position to draw at. May be a non-integer.\n   */\n  drawTop(ctx: Context, {th, r}: RingPosition) {\n    if (this.hasEnemy) {\n      ctx.fillStyle = ENEMY_COLOR;\n      const dotCenter = cellCenter({th, r});\n      ctx.moveTo(dotCenter.x, dotCenter.y);\n      ctx.beginPath();\n      ctx.arc(dotCenter.x, dotCenter.y, ENEMY_RADIUS, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n  }\n\n  /**\n   * Clear the top of the cell, where the enemies are.\n   * @param ctx The context to draw on, expected to be the 'enemy' layer.\n   * @param pos The ring position to clear.\n   */\n  clearTop(ctx: Context, pos: RingPosition) {\n    ctx.save();\n    ctx.fillStyle = 'black';\n    ctx.globalCompositeOperation = 'destination-out';\n    this.basePath(ctx, pos);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  /** Paths out the actual base of the cell, for clearing or drawing. */\n  private basePath(ctx: Context, {th, r}: RingPosition) {\n    ctx.moveTo(0, 0);\n    ctx.beginPath();\n    const rStart = R0 + r * CELL_WIDTH;\n    const rEnd = rStart + CELL_WIDTH;\n    const thStart = th * CELL_ANGLE;\n    const thEnd = thStart + CELL_ANGLE;\n    filledArc(ctx, 0, 0, rStart, rEnd, thStart, thEnd);\n  }\n}\n\n/** A dumb class that draws cells in the ring. */\nclass RingView {\n  private readonly layers_: Layers;\n  private model_: RingModel;\n\n  /**\n   * @param layers The set of Contexts to draw on.\n   * @param model The {@link RingModel} that contains the cells.\n   */\n  constructor(layers: Layers, model: RingModel) {\n    this.layers_ = layers;\n    this.model_ = model;\n  }\n\n  /** Draw the whole ring, including the background. */\n  draw() {\n    this.drawRing();\n    this.drawOverlay();\n  }\n\n  /**\n   * Draws a specific subring or row, possibly currently animated.\n   * @param group The subring/row.\n   * @param anim_amount The amount we're currently through an animation,\n   * in the range [-1, 1]. See {@link drawSubring}, {@link drawAngle}.\n   */\n  drawGroup(group: RingGroup, anim_amount = 0) {\n    if (group.type === 'ring') {\n      this.drawSubring(group.r, anim_amount);\n    } else {\n      this.drawAngle(group.th, anim_amount);\n      this.drawAngle((group.th + NUM_ANGLES / 2) % NUM_ANGLES, -anim_amount);\n    }\n  }\n\n  /** Get the cell at a given position. */\n  private getCell(pos: RingPosition): Cell {\n    return this.model_.getCell(pos);\n  }\n\n  /**\n   * Draws a specific subring, possibly currently animated.\n   *\n   * An anim_amount of 0 draws the subring as the model says.\n   * Lower values are drawn rotated anticlockwise, and higher amounts are drawn\n   * rotated clockwise.\n   * @param r The radius index of the subring.\n   * @param anim_amount The animation amount, in the range [-1, 1].\n   */\n  private drawSubring(r: number, anim_amount = 0) {\n    const base = this.getLayer();\n    const enemies = this.getLayer('enemy');\n\n    // Clear enemies in the ring.\n    enemies.save();\n    enemies.fillStyle = 'black';\n    enemies.globalCompositeOperation = 'destination-out';\n    enemies.moveTo(0, 0);\n    enemies.beginPath();\n    const rStart = R0 + r * CELL_WIDTH;\n    const rEnd = rStart + CELL_WIDTH;\n    filledArc(enemies, 0, 0, rStart, rEnd, 0, Math.PI * 2);\n    enemies.fill();\n    enemies.restore();\n\n    for (let th = 0; th < NUM_ANGLES; ++th) {\n      const cell = this.getCell({th, r});\n      const thShifted = th + anim_amount;\n      cell.drawBase(base, {th: thShifted, r});\n      cell.drawTop(enemies, {th: thShifted, r});\n    }\n  }\n\n  /**\n   * Draws a specific angle/half-row, possibly currently animated.\n   *\n   * An anim_amount of 0 draws the subring as the model says.\n   * Lower values are drawn shifted inwards, and higher amounts are drawn\n   * shifted outwards.\n   * @param th The angular index (theta) of the subring.\n   * @param anim_amount The animation amount, in the range [-1, 1].\n   */\n  private drawAngle(th: number, anim_amount = 0) {\n    const base = this.getLayer();\n    const enemies = this.getLayer('enemy');\n\n    // Clear enemies in the row.\n    enemies.save();\n    enemies.fillStyle = 'black';\n    enemies.globalCompositeOperation = 'destination-out';\n    enemies.moveTo(0, 0);\n    enemies.beginPath();\n    const rEnd = R0 + CELL_WIDTH * NUM_RINGS;\n    const thStart = th * CELL_ANGLE;\n    const thEnd = thStart + CELL_ANGLE;\n    filledArc(enemies, 0, 0, R0, rEnd, thStart, thEnd);\n    enemies.fill();\n    enemies.restore();\n    enemies.save();\n    enemies.clip();\n    try {\n      for (let r = 0; r < NUM_RINGS; ++r) {\n        const cell = this.getCell({th, r});\n        const rShifted = r + anim_amount;\n        cell.drawBase(base, {th, r: rShifted});\n        cell.drawTop(enemies, {th, r: rShifted});\n      }\n      if (anim_amount !== 0) {\n        const thWrapped = (th + NUM_ANGLES / 2) % NUM_ANGLES;\n        const rWrapped = anim_amount < 0 ? NUM_RINGS - 1 : 0;\n        const rShifted = (anim_amount < 0 ? NUM_RINGS : -1) + anim_amount;\n        const cell = this.getCell({th: thWrapped, r: rWrapped});\n        cell.drawBase(base, {th, r: rShifted});\n        cell.drawTop(enemies, {th, r: rShifted});\n      }\n    } finally {\n      enemies.restore();\n    }\n  }\n\n  /** Draw the ring and its contents. */\n  private drawRing() {\n    // Ring cells\n    for (let r = 0; r < NUM_RINGS; ++r) {\n      this.drawSubring(r);\n    }\n  }\n\n  /** Draw the contents of the ring overlay. Should only need once. */\n  private drawOverlay() {\n    const ctx = this.getLayer('overlay');\n    // Inner circle.\n    ctx.fillStyle = INSIDE_BORDER;\n    ctx.moveTo(0, 0);\n    ctx.beginPath();\n    ctx.arc(0, 0, R0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.fillStyle = INSIDE_FILL;\n    ctx.moveTo(0, 0);\n    ctx.beginPath();\n    ctx.arc(0, 0, R0 - INSIDE_BORDER_WIDTH, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Outside circle.\n    ctx.lineWidth = OUTSIDE_BORDER_WIDTH;\n    ctx.fillStyle = OUTSIDE_FILL;\n    ctx.strokeStyle = OUTSIDE_BORDER;\n    ctx.moveTo(0, 0);\n    ctx.beginPath();\n    const OUTSIDE_R0 = R0 + NUM_RINGS * CELL_WIDTH;\n    ctx.arc(0, 0, OUTSIDE_R0 + OUTSIDE_WIDTH, 0, Math.PI * 2, false);\n    ctx.moveTo(0, 0);\n    ctx.arc(0, 0, OUTSIDE_R0, 0, Math.PI * 2, true);\n    innerStroke(ctx);\n  }\n\n  /** Get the layer associated with the layer name. */\n  getLayer(layer_name: LayerName = 'ring'): Context {\n    const layer = this.layers_[layer_name];\n    if (layer === undefined) {\n      throw new ReferenceError(`No layer named ${layer_name}!`);\n    }\n    return layer;\n  }\n}\n\n/** Contains the actual data stored on the ring, with manipulation code. */\nexport class RingModel {\n  /** The actual contents of the model, hidden through abstraction. */\n  private readonly ringContents_: Cell[];\n\n  constructor() {\n    this.ringContents_ = [];\n    for (let i = 0; i < NUM_CELLS; ++i) {\n      const color =\n        ((i % 2) + Math.floor(i / NUM_ANGLES)) % 2 === 0\n          ? CELL1_FILL\n          : CELL2_FILL;\n      this.ringContents_.push(new Cell(color));\n    }\n  }\n\n  /**\n   * Manipulate the ring contents, either a row shift or subring rotate.\n   * @param m The ring movement to do.\n   */\n  move(m: RingMovement) {\n    if (m.amount < 0) {\n      throw new RangeError(`move amount ${m.amount} < 0`);\n    }\n    for (let i = 0; i < m.amount; ++i) {\n      if (m.type === 'ring') {\n        this.rotateRing(m.r, m.clockwise);\n      } else {\n        this.shiftRow(m.th, m.outward);\n      }\n    }\n  }\n\n  /**\n   * Rotate a subring once.\n   * @param r The subring index to rotate.\n   * @param clockwise Whether to rotate the ring clockwise.\n   */\n  private rotateRing(r: number, clockwise: boolean) {\n    console.log('Rotate ring', r, clockwise ? 'clockwise' : 'anti-clockwise');\n    let start = r * NUM_ANGLES;\n    let step = 1;\n    let end = (r + 1) * NUM_ANGLES;\n    const arr = this.ringContents_;\n    if (clockwise) {\n      step = -step;\n      [start, end] = [end + step, start + step];\n    }\n    for (let i = start; i !== end - step; i += step) {\n      [arr[i], arr[i + step]] = [arr[i + step], arr[i]];\n    }\n  }\n\n  /**\n   * Shift a given row once.\n   * @param th The angular index to shift, [0, NUM_ANGLES).\n   * @param outward Whether to shift outwards or inwards.\n   */\n  private shiftRow(th: number, outward: boolean) {\n    if (th >= NUM_ANGLES / 2) {\n      this.shiftRow(th - NUM_ANGLES / 2, !outward);\n      return;\n    }\n    console.log('Shift row', th, outward ? 'outward' : 'inward');\n    let start = th;\n    let step = NUM_ANGLES;\n    let end = th + NUM_CELLS;\n    if (outward) {\n      start += step / 2;\n      end += step / 2;\n    }\n    const arr = this.ringContents_;\n    if ((end - start) % step !== 0) {\n      throw new RangeError('wtf');\n    }\n    let i = start;\n    let n = 0;\n    while (++n < NUM_RINGS * 2) {\n      let j = i + step;\n      if (Math.round(j) === end) {\n        j -= step / 2;\n        if (outward) {\n          j -= step;\n        }\n        step = -step;\n      }\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n      i = j;\n    }\n  }\n\n  getCell({th, r}: RingPosition) {\n    if (th < 0 || th >= NUM_ANGLES || r < 0 || r >= NUM_RINGS) {\n      throw new RangeError(`Cell index out of range: {th: ${th}, r: ${r}}}`);\n    }\n    return this.ringContents_[(th % NUM_ANGLES) + r * NUM_ANGLES];\n  }\n}\n\n/**\n * Represents the user-visible ring and tools to manipulate it.\n * This is the really important class.\n */\nexport class Ring {\n  private readonly canvases_: Canvases;\n  private readonly model_: RingModel;\n  private readonly view_: RingView;\n  private currentMovement_: RingMovement | null = null;\n  private readonly animation_: Animation;\n  private readyCallbacks_: {(): void}[] = [];\n\n  constructor(canvases: Canvases) {\n    this.canvases_ = canvases;\n    this.model_ = new RingModel();\n    this.view_ = new RingView(canvasesToLayers(canvases), this.model_);\n    this.animation_ = new Animation(\n      1,\n      this.onFrame.bind(this),\n      this.onSingleMoveDone.bind(this)\n    );\n  }\n\n  get model(): RingModel {\n    return this.model_;\n  }\n\n  get view(): RingView {\n    return this.view_;\n  }\n\n  /**\n   * Called on each frame of a move animation.\n   * @param amount The progress through the animation to draw, [0, 1].\n   */\n  private onFrame(amount: number) {\n    if (!this.currentMovement_) {\n      throw new ReferenceError('Last movement null?');\n    }\n    if (isNegativeMovement(this.currentMovement_)) {\n      amount = -amount;\n    }\n    this.view.drawGroup(this.currentMovement_, amount);\n  }\n\n  /** Executed when an animation has finished for a single movement. */\n  private onSingleMoveDone() {\n    if (!this.currentMovement_) {\n      throw new ReferenceError('Last movement null?');\n    }\n    this.model.move(this.currentMovement_);\n    if (--this.currentMovement_.amount > 0) {\n      // We're not done moving yet, replay the animation.\n      this.animation_.play();\n    } else {\n      this.currentMovement_ = null;\n      while (this.readyCallbacks_.length > 0) {\n        const cb = this.readyCallbacks_.shift();\n        if (!cb) {\n          throw new ReferenceError('cb null???');\n        }\n        cb();\n        if (this.currentMovement_ !== null) {\n          // This callback started a new movement.\n          break;\n        }\n      }\n    }\n  }\n\n  /** Is the ring currently busy being animated? */\n  isBusy(): boolean {\n    return this.animation_.isPlaying();\n  }\n\n  /** Returns a promise that resolves when the animation is done playing. */\n  async waitUntilReady(): Promise<void> {\n    if (!this.isBusy()) {\n      return Promise.resolve();\n    }\n    return new Promise(resolve => this.readyCallbacks_.push(resolve));\n  }\n\n  /** Animates a movement, returning a promise that resolves when it's done. */\n  async animateMove(\n    m: RingMovement,\n    animate: AnimationMode = AnimationMode.NORMAL\n  ): Promise<void> {\n    await this.waitUntilReady();\n    if (animate === AnimationMode.NONE) {\n      this.model.move(m);\n      return;\n    }\n    this.currentMovement_ = {...m};\n    this.animation_.play(animationSpeed(m.type, animate));\n    await this.waitUntilReady();\n  }\n\n  /**\n   * Draws a specific subring or row.\n   * @param group The subring/row.\n   */\n  drawGroup(group: RingGroup) {\n    this.view.drawGroup(group, 0);\n  }\n\n  /**\n   * Converts from a canvas offset to the equivalent in the drawing frame.\n   * @param offsetPos.x The canvas.offsetX\n   * @param offsetPos.y The canvas.offsetY\n   * @returns The equivalent (X, Y) point in the frame, with a (0,0) center.\n   */\n  private offsetToFramePos(offsetPos: Point): Point {\n    const style = window.getComputedStyle(this.canvases_.ring);\n    const canvasSize = {\n      width: parseInt(style.width, 10),\n      height: parseInt(style.height, 10),\n    };\n    return {\n      x: (offsetPos.x / canvasSize.width) * FRAME.width - FRAME.width / 2,\n      y: (offsetPos.y / canvasSize.height) * FRAME.height - FRAME.height / 2,\n    };\n  }\n\n  /**\n   * Converts from a canvas offset to a ring position.\n   * @param offsetPos.x The canvas.offsetX\n   * @param offsetPos.y The canvas.offsetY\n   * @returns The equivalent position in the ring, or null if there is none.\n   */\n  private offsetToRingPos(offsetPos: Point): RingPosition | null {\n    const {x, y} = this.offsetToFramePos(offsetPos);\n    const th = Math.floor(\n      (Math.atan2(-y, -x) / (2 * Math.PI)) * NUM_ANGLES + NUM_ANGLES / 2\n    );\n    const r = Math.floor((Math.sqrt(x * x + y * y) - R0) / CELL_WIDTH);\n    if (r < 0 || r >= NUM_RINGS) {\n      return null;\n    }\n    if (th < 0 || th >= NUM_ANGLES) {\n      throw new RangeError('Theta out of range??');\n    }\n    return {th, r};\n  }\n\n  /** Run every time a mouse click or touch happens. */\n  onMouseDown(event: MouseEvent) {\n    const pos = this.offsetToRingPos({x: event.offsetX, y: event.offsetY});\n    if (!pos) {\n      return;\n    }\n    console.log('click', pos);\n    const ctx = this.view.getLayer('enemy');\n    const cell = this.model.getCell(pos);\n    cell.hasEnemy = !cell.hasEnemy;\n    cell.clearTop(ctx, pos);\n    cell.drawTop(ctx, pos);\n  }\n}\n","import {\n  AnimationMode,\n  RingPosition,\n  Ring,\n  filledArc,\n  R0,\n  FRAME,\n  NUM_RINGS,\n  NUM_ANGLES,\n  CELL_WIDTH,\n  CELL_ANGLE,\n} from './ring';\nimport {\n  combineMovements,\n  MoveHistory,\n  reverseMovement,\n  RingGroupType,\n  RingMovement,\n} from './movement';\nimport {Animation} from './animation';\nimport {Controls, ControlState} from './controls';\n\ntype CursorType = RingGroupType;\ntype CursorMovement = {type: 'ring'} | {type: 'row'; clockwise: boolean};\nconst CURSOR_UNFOCUSED = 'rgba(186, 210, 247, 0.5)';\nconst CURSOR_FOCUSED = 'rgba(82, 148, 250, 0.8)';\n\nconst CURSOR_RING_MOVE_ANIMATION_TIME = 0.05;\nconst CURSOR_SHIFT_MOVE_ANIMATION_TIME = 0.1;\n\nenum CursorState {\n  /** The cursor is unfocused. Movement moves the cursor. */\n  UNFOCUSED = 0,\n  /** The cursor is focused. Movement moves the ring. */\n  FOCUSED = 1,\n  /** The cursor is hidden. Movement does nothing. */\n  HIDDEN = 2,\n}\n\n/**\n * A cursor for performing manual ring movements.\n * Currently only supports desktop keyboard movement.\n */\nexport class Cursor {\n  pos: RingPosition = {r: 0, th: 0};\n\n  private type_: CursorType = 'ring';\n  private state_: CursorState = CursorState.UNFOCUSED;\n  private currentMovement_: RingMovement | null = null;\n  private animatingMovement_: CursorMovement | null = null;\n  private readonly animation_: Animation;\n  private readonly ring_: Ring;\n  private readonly moveHistory_: MoveHistory;\n  private readonly controls_: Controls;\n\n  constructor(ring: Ring, moveHistory: MoveHistory, controls: Controls) {\n    this.ring_ = ring;\n    this.animation_ = new Animation(\n      CURSOR_RING_MOVE_ANIMATION_TIME,\n      amount => this.drawAnimationFrame(amount),\n      () => {\n        if (!this.animatingMovement_) {\n          throw new ReferenceError('Last movement undefined?');\n        }\n        const clockwise =\n          this.animatingMovement_.type === 'ring' ||\n          this.animatingMovement_.clockwise;\n        this.move(clockwise, false);\n        this.draw();\n      }\n    );\n    this.moveHistory_ = moveHistory;\n    this.controls_ = controls;\n  }\n\n  /** Is this cursor currently hidden? */\n  get hidden(): boolean {\n    return this.state_ === CursorState.HIDDEN;\n  }\n\n  /** Is this cursor currently focused? */\n  get focused(): boolean {\n    return this.state_ === CursorState.FOCUSED;\n  }\n\n  /** Switches the type of the cursor between subring and row. */\n  private switchType() {\n    if (this.type_ === 'ring') {\n      this.type_ = 'row';\n    } else if (this.type_ === 'row') {\n      this.type_ = 'ring';\n    }\n  }\n\n  /**\n   * Has the cursor itself move - NOT move the underlying ring.\n   * Precondition: !this.focused.\n   * @param reverse If in row mode, move anticlockwise if this is true.\n   * @param animate Whether to animate the cursor movement.\n   */\n  private move(reverse: boolean, animate = true) {\n    if (animate) {\n      if (this.animation_.isPlaying()) {\n        return;\n      }\n      this.animatingMovement_ = {clockwise: reverse, type: this.type_};\n      this.animation_.play(\n        this.type_ === 'ring'\n          ? CURSOR_RING_MOVE_ANIMATION_TIME\n          : CURSOR_SHIFT_MOVE_ANIMATION_TIME\n      );\n      return;\n    }\n    if (this.type_ === 'ring') {\n      this.pos = {...this.pos, r: (this.pos.r + 1) % NUM_RINGS};\n    } else {\n      const d = reverse ? 1 : -1;\n      this.pos = {\n        ...this.pos,\n        th: (this.pos.th + d + NUM_ANGLES) % (NUM_ANGLES / 2),\n      };\n    }\n  }\n\n  /** Draws one animation frame. */\n  private drawAnimationFrame(amount: number) {\n    if (!this.animatingMovement_) {\n      throw new ReferenceError('Last movement null?');\n    }\n    if (\n      this.animatingMovement_.type === 'row' &&\n      !this.animatingMovement_.clockwise\n    ) {\n      amount = -amount;\n    }\n    this.draw(amount);\n  }\n\n  /** Draws the whole cursor. */\n  draw(\n    anim_amount = 0,\n    ctx: CanvasRenderingContext2D = this.ring_.view.getLayer('cursor')\n  ) {\n    ctx.clearRect(\n      -FRAME.width / 2,\n      -FRAME.height / 2,\n      FRAME.width * 1.5,\n      FRAME.height * 1.5\n    );\n    if (this.hidden) {\n      return;\n    }\n    ctx.fillStyle = this.focused ? CURSOR_FOCUSED : CURSOR_UNFOCUSED;\n    if (this.type_ === 'ring') {\n      this.drawRing_(anim_amount, ctx);\n    } else if (this.type_ === 'row') {\n      this.drawRow_(anim_amount, ctx);\n    }\n  }\n\n  /**\n   * Draws a ring-shaped cursor.\n   * @param anim_amount The animation amount, [0, 1]. Higher values are more outwards.\n   * @param ctx The context to draw on.\n   */\n  private drawRing_(anim_amount: number, ctx: CanvasRenderingContext2D) {\n    let r = this.pos.r + anim_amount;\n    ctx.moveTo(0, 0);\n    ctx.beginPath();\n    const boardR = R0 + r * CELL_WIDTH;\n    filledArc(ctx, 0, 0, boardR, boardR + CELL_WIDTH, 0, Math.PI * 2);\n    ctx.fill();\n    if (r > NUM_RINGS - 1 || r < 0) {\n      r = (r + NUM_RINGS) % NUM_RINGS;\n      const boardR = R0 + r * CELL_WIDTH;\n      ctx.moveTo(0, 0);\n      ctx.beginPath();\n      filledArc(ctx, 0, 0, boardR, boardR + CELL_WIDTH, 0, Math.PI * 2);\n      ctx.fill();\n    }\n  }\n\n  /**\n   * Draws a row-shaped cursor.\n   * @param anim_amount The animation amount, [-1, 1]. Higher values are more clockwise.\n   * @param ctx The context to draw on.\n   */\n  private drawRow_(anim_amount: number, ctx: CanvasRenderingContext2D) {\n    const th = this.pos.th;\n    ctx.moveTo(0, 0);\n    ctx.beginPath();\n    for (const drawTh of [th, (th + NUM_ANGLES / 2) % NUM_ANGLES]) {\n      const boardTh = (drawTh + anim_amount) * CELL_ANGLE;\n      const endR = R0 + CELL_WIDTH * NUM_RINGS;\n      filledArc(ctx, 0, 0, R0, endR, boardTh, boardTh + CELL_ANGLE);\n      ctx.moveTo(0, 0);\n    }\n    ctx.fill();\n  }\n\n  /** Hides the cursor and prevents it from being used. */\n  hide() {\n    if (this.hidden) {\n      return;\n    }\n    if (this.focused) {\n      this.confirm();\n    }\n    if (this.state_ !== CursorState.UNFOCUSED) {\n      throw new Error('BUG: Cursor state not unfocused');\n    }\n    this.state_ = CursorState.HIDDEN;\n    this.draw();\n    this.updateControls();\n  }\n\n  /** Shows the cursor to let it be used. */\n  show() {\n    if (this.hidden) {\n      this.state_ = CursorState.UNFOCUSED;\n    }\n    this.draw();\n    this.updateControls();\n  }\n\n  /** Can this cursor be interacted with by the user? */\n  private isBusy(): boolean {\n    return this.ring_.isBusy() || this.hidden;\n  }\n\n  /** Manipulates the cursor with the keyboard. */\n  onKeyDown(event: KeyboardEvent) {\n    if (this.isBusy()) {\n      return;\n    }\n    if (event.key === 'Enter' && !this.focused) {\n      this.currentMovement_ = null;\n      this.switchType();\n      this.draw();\n    } else if (event.key === ' ') {\n      if (this.focused) {\n        this.confirm();\n      } else {\n        this.switchFocus();\n      }\n    } else if (event.key === 'Backspace' || event.key === 'Escape') {\n      this.cancel();\n    } else {\n      if (this.focused) {\n        this.moveRing(event.key);\n      } else {\n        const positive = this.arrowIsPositive(event.key);\n        if (positive === null) {\n          return;\n        }\n        this.move(positive);\n        this.draw();\n      }\n    }\n  }\n\n  /**\n   * Confirms a planned movement with the cursor.\n   * Precondition: this.focused.\n   */\n  private confirm() {\n    this.moveHistory_.addMovement(this.currentMovement_);\n    this.switchFocus();\n  }\n\n  /**\n   * Cancels or undoes, based on the focus state of the cursor.\n   * Equivalent to pressing 'B' in the game.\n   */\n  cancel() {\n    if (this.isBusy()) {\n      return;\n    }\n    if (this.focused) {\n      this.cancelPlanned();\n    } else {\n      this.undo();\n    }\n  }\n\n  /**\n   * Cancels a planned movement with the cursor.\n   * Precondition: this.focused.\n   */\n  private cancelPlanned() {\n    if (this.currentMovement_ === null) {\n      this.switchFocus();\n      // We haven't moved in this focus yet, nothing to undo.\n      return;\n    }\n    const movement = reverseMovement(this.currentMovement_);\n    this.ring_\n      .animateMove(movement, AnimationMode.UNDO)\n      .then(() => this.switchFocus());\n    this.ring_.drawGroup(movement);\n    this.currentMovement_ = null;\n    this.updateControls();\n  }\n\n  /**\n   * Undoes a movement already executed.\n   * Precondition: !this.focused.\n   */\n  private undo() {\n    if (this.moveHistory_.empty) {\n      return;\n    }\n    const movement = this.moveHistory_.popMovement();\n    if (movement === null) {\n      return;\n    }\n    this.ring_.animateMove(reverseMovement(movement), AnimationMode.UNDO);\n    this.ring_.drawGroup(movement);\n    this.updateControls();\n  }\n\n  /**\n   * Switches whether the cursor is focused or not.\n   * Precondition: !this.hidden.\n   */\n  private switchFocus() {\n    if (this.hidden) {\n      return;\n    }\n    this.state_ = this.focused ? CursorState.UNFOCUSED : CursorState.FOCUSED;\n    this.currentMovement_ = null;\n    this.draw();\n    this.updateControls();\n  }\n\n  /**\n   * Updates the controls section with the relevant info.\n   */\n  private updateControls() {\n    const states: ControlState[] = [];\n    if (this.focused) {\n      states.push('moving');\n    } else {\n      states.push('choosing');\n      if (!this.moveHistory_.empty) {\n        states.push('undo');\n      }\n    }\n    if (this.hidden) {\n      states.push('hidden');\n    }\n    this.controls_.setStates(states);\n  }\n\n  /**\n   * Moves the ring based on the current ring state.\n   * Precondition: this.focused.\n   * @param key The keypress string.\n   */\n  private moveRing(key: string) {\n    let positive = this.arrowIsPositive(key);\n    if (positive === null) {\n      return;\n    }\n    let movement: RingMovement;\n    if (this.type_ === 'ring') {\n      movement = {\n        type: 'ring',\n        clockwise: positive,\n        r: this.pos.r,\n        amount: 1,\n      };\n    } else {\n      const th = this.pos.th;\n      // While actively shifting, the direction depends where you are.\n      // On the bottom-left/top-right rows, Up = Right, Down = Left.\n      const quadrant1Or3 = th % (NUM_ANGLES / 2) >= NUM_ANGLES / 4;\n      if (quadrant1Or3 && (key === 'ArrowLeft' || key === 'ArrowRight')) {\n        positive = !positive;\n      }\n      movement = {\n        type: 'row',\n        outward: positive,\n        th,\n        amount: 1,\n      };\n    }\n    this.currentMovement_ = combineMovements(this.currentMovement_, movement);\n    this.ring_.animateMove(movement, AnimationMode.NORMAL);\n    this.ring_.drawGroup(movement);\n  }\n\n  // When moving, Up = Left, Down = Right.\n  // Left = counter-clockwise, right = clockwise.\n  private arrowIsPositive(key: string): boolean | null {\n    if (key === 'ArrowUp' || key === 'ArrowLeft') {\n      return false;\n    } else if (key === 'ArrowDown' || key === 'ArrowRight') {\n      return true;\n    } else {\n      return null;\n    }\n  }\n}\n","import {simplifyMovement} from './movement';\nimport {NUM_ANGLES, NUM_RINGS, RingModel} from './ring';\nimport type {RingData, Solution, SolverOutput} from './worker';\nexport type {Solution};\n\nfunction getRingData(ring: RingModel): RingData {\n  const ringData: RingData = [0, 0, 0, 0];\n  for (let r = 0; r < NUM_RINGS; ++r) {\n    let subring = 0;\n    for (let th = 0; th < NUM_ANGLES; ++th) {\n      subring |= (ring.getCell({th, r}).hasEnemy ? 1 : 0) << th;\n    }\n    ringData[r] = subring;\n  }\n  return ringData;\n}\n\nexport class Solver {\n  private worker_: Worker | null = null;\n\n  /** Return or build a solver worker. */\n  private async getWorker(): Promise<Worker> {\n    if (this.worker_ === null) {\n      const w = new Worker('./worker.js');\n      w.onmessage = w.onerror = w.onmessageerror = console.error;\n      this.worker_ = w;\n    }\n    return this.worker_;\n  }\n\n  /**\n   * Solve a ring puzzle asynchronously.\n   * @param ring The ring data to find a solution for.\n   * @returns A promise that resolves with a found solution, or null if none found.\n   */\n  async solve(ring: RingModel): Promise<Solution | null> {\n    const worker = await this.getWorker();\n    const channel = new MessageChannel();\n    worker.postMessage({ondone: channel.port2, ringData: getRingData(ring)}, [\n      channel.port2,\n    ]);\n    return new Promise((resolve, reject) => {\n      channel.port1.onmessage = (e: MessageEvent<SolverOutput>) => {\n        if (e.data.type === 'done') {\n          const s = e.data.solution;\n          if (s === null) {\n            resolve(null);\n          } else {\n            resolve({...s, moves: s.moves.map(simplifyMovement)});\n          }\n        } else {\n          reject(e.data.error);\n        }\n      };\n      channel.port1.onmessageerror = e => {\n        reject(e.data);\n      };\n    });\n  }\n}\n","export type ControlState = 'moving' | 'choosing' | 'undo' | 'hidden';\n\nexport class Controls {\n  private readonly controlsDisplay_: HTMLElement;\n  constructor(controlsDisplay: HTMLElement) {\n    this.controlsDisplay_ = controlsDisplay;\n  }\n\n  setStates(states: ControlState[]) {\n    this.controlsDisplay_.setAttribute('states', states.join(' '));\n  }\n}\n","import {Ring} from './ring';\nimport {Cursor} from './cursor';\nimport {MoveHistory} from './movement';\nimport {Solver, Solution} from './solver';\nimport {Controls} from './controls';\n\nfunction getNotNullById<T extends HTMLElement = HTMLElement>(id: string): T {\n  const element = document.getElementById(id);\n  if (!element) {\n    throw new Error('Could not find element with id ' + id);\n  }\n  return element as T;\n}\n\nfunction main() {\n  const overlay = getNotNullById<HTMLCanvasElement>('overlay-layer');\n  const ring = new Ring({\n    enemy: getNotNullById<HTMLCanvasElement>('enemy-layer'),\n    ring: getNotNullById<HTMLCanvasElement>('ring-layer'),\n    cursor: getNotNullById<HTMLCanvasElement>('cursor-layer'),\n    overlay,\n  });\n  const moveHistory = new MoveHistory(getNotNullById('ring-moves'));\n  const controls = new Controls(getNotNullById('controls'));\n  const cursor = new Cursor(ring, moveHistory, controls);\n  const solver = new Solver();\n  const solveButton = getNotNullById('solve-button');\n  ring.view.draw();\n  cursor.draw();\n\n  overlay.addEventListener('mousedown', e => {\n    if (solveButton.classList.contains('solving')) {\n      return;\n    }\n    solveButton.innerText = 'Solve';\n    ring.onMouseDown(e);\n  });\n  document.addEventListener('keydown', cursor.onKeyDown.bind(cursor));\n  // Prevents mouse focus, https://stackoverflow.com/a/37580028.\n  solveButton.addEventListener('mousedown', e => e.preventDefault());\n  solveButton.addEventListener('click', async () => {\n    if (solveButton.classList.contains('solving')) {\n      return;\n    }\n    solveButton.classList.add('solving');\n    solveButton.innerText = 'Solving';\n    let solution: Solution | null;\n    try {\n      solution = await solver.solve(ring.model);\n    } catch (e) {\n      solveButton.innerText = 'Error!';\n      solveButton.classList.add('error');\n      solveButton.classList.remove('solving');\n      throw e;\n    }\n    if (solution) {\n      console.log(solution);\n      cursor.hide();\n      // Animate the solve.\n      for (const move of solution.moves) {\n        await ring.animateMove(move);\n        moveHistory.addMovement(move);\n        await new Promise(r => setTimeout(r, 250));\n      }\n      cursor.show();\n      solveButton.innerText = 'Solved!';\n    } else {\n      solveButton.innerText = \"Can't solve in 4 turns!\";\n    }\n    solveButton.classList.remove('solving');\n  });\n\n  const undoButton = getNotNullById('undo-button');\n  undoButton.addEventListener('mousedown', e => e.preventDefault());\n  undoButton.addEventListener('click', () => {\n    solveButton.innerText = 'Solve';\n    cursor.cancel();\n  });\n}\n\nwindow.addEventListener('load', main);\n\n// Calculates the internal app height, used for the footer on mobile.\n// I don't want to use JavaScript for this, but my hand has been forced.\n// See: https://stackoverflow.com/a/50683190.\nconst appHeight = () => {\n  const doc = document.documentElement;\n  doc.style.setProperty('--app-height', `${window.innerHeight}px`);\n};\nwindow.addEventListener('resize', appHeight);\nappHeight();\n"],"sourceRoot":""}